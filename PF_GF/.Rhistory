## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(BiocManager)
library(ggplot2)
library(phyloseq)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ;, escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ;, escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+     delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(lattice, lib.loc = "C:/Program Files/R/R-4.2.2/library")
library(dada2)
## De .csv a phyloseq
TAXA <- read.delim("PF_GF/domain;phylum;class;order;family;ge.txt",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+   delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+   delim = ";", escape_double = FALSE, trim_ws = TRUE)
o<-sequence(3759)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+   delim = ";", escape_double = FALSE, trim_ws = TRUE)
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+   delim = ";", escape_double = FALSE, trim_ws = TRUE)
otu<-paste(t,o, sep = "_")
t<-rep("otu", 3759)
otu<-paste(t,o, sep = "_")
otu
taxa<-cbind(TAXA,otu) #TAXA es la tabla que envié antes solo que le pusi ese nombre
## De .csv a phyloseq
TAXA <- read_delim("PF_GF/domain;phylum;class;order;family;ge.txt",
+   delim = ";", escape_double = FALSE, trim_ws = TRUE)
TAXA <- read_delim("Pf")
TAXA <- read.delim("Pf")
TAXA <- read.delim("raw_data/domain;phylum;class;order;family;ge.txt",
+ delim=";", escape_double = F, trim_ws = T)
TAXA <- read.delim("raw_data/domain;phylum;class;order;family;ge.txt",
+ delim=";", escape_double = F, trim_ws = T)
`domain;phylum;class;order;family;ge` <- read.csv("~/Proyecto_final_GF/PF_GF/raw_data/domain;phylum;class;order;family;ge.txt", sep=";")
TAXA <- read.csv("~/Proyecto_final_GF/PF_GF/raw_data/domain;phylum;class;order;family;ge.txt", sep=";")
TAXA <- read.csv("~/Proyecto_final_GF/PF_GF/raw_data/domain;phylum;class;order;family;ge.txt", sep=";")
library(phyloseq)
library(readxl)
library(ggplot2)
datos
### Gráficos con el objeto phyloseq ----
plot_bar(datos, fill = "DOMAIN")
### Creación del filtrado que deje únicamente los datos más relevantes ----
tabla_abundancias <- otu_table(datos)
suma_abundancias <- rowSums(tabla_abundancias)
umbral <- 0.00001
filtro_taxa <- names(suma_abundancias[suma_abundancias < umbral])
datos_filtrados <- prune_taxa(filtro_taxa, datos)
datos_filtrados
### Gráficos con el filtrado
plot_bar(datos_filtrados, fill = "DOMAIN")
plot_bar(datos, fill="subject", facet_grid=~DOMAIN)
### Gráficos con el filtrado
plot_bar(datos_filtrados, fill = "DOMAIN")
plot_bar(datos_filtrados, fill="subject", facet_grid=~DOMAIN)
plot_bar(datos_filtrados, fill="subject", facet_grid=~DOMAIN)
plot_bar(datos_filtrados, fill="zona", facet_grid=~DOMAIN)
plot_bar(datos_filtrados, fill="tratamiento", facet_grid=~DOMAIN)
plot_bar(datos_filtrados, fill="dia", facet_grid=~DOMAIN)
plot_bar(datos_filtrados,"dia", facet_grid =~DOMAIN)
plot_bar(datos_filtrados,"dia",fill="tratamiento", facet_grid =~DOMAIN)
plot_bar(datos_filtrados,"tratamiento", fill="subject", facet_grid =~DOMAIN)
#estimadores de la diversidad alfa
alpha_meas = c("Shannon", "Simpson", "InvSimpson")
(p <- plot_richness(datos_filtrados,"dia","tratamiento",measures = alpha_meas))
datos
sample_names(datos)
rank_names(datos)
sample_variables(datos)
